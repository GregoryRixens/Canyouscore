<%= render "shared/navbar" %>
<div class="text-center my-3">
    <h2><strong>Statistiques</strong></h2>
</div>

<div class="d-flex">
  <select class="form-control ms-2" id="zoneFilter" onchange="filterByZone()" style= "width: 100%;" >
    <option value="">
      <% if params[:zone_id].present? %>
        <%= Zone.find(params[:zone_id]).description %> (<%= Zone.find(params[:zone_id]).name %>)
      <% else %>
        Filtrer
      <% end %>
    </option>
    <% @profil.trainings.distinct.pluck(:zone_id).each do |zone_id| %>
      <% zone = Zone.find(zone_id) %>
      <option value="<%= zone.id %>"><%= zone.description %> (<%= zone.name %>)</option>
    <% end %>
  </select>
  <button onclick="showAllZones()" class="custom-button me-2">Total</button>
</div>


<h2 class="text-center my-3 py-2 border-top border-bottom"><strong>Mes stats</strong></h2>
<div data-controller="toggle">
  <div class="cacheRaph"></div>
  <canvas id="statsChart" width="410" height="300" class="me-3"></canvas>
  <div class="position-relative shadow" data-toggle-target="titre">
    <p class="text-start ps-4 my-3 py-2 border-top border-bottom"><strong>Détails</strong></p>
    <i class="fas fa-angle-down position-absolute end-0 top-0 pt-3 pe-3" data-toggle-target="toggleable"></i>
  </div>
  <div class="d-flex flex-column d-none pb-5 mb-5" data-toggle-target="tablemoi">
    <table class="table table-striped text-center">
      <thead>
        <tr class="text-center">
          <th>Date</th>
          <th>Total</th>
          <th>Rentrés</th>
          <th>Précision</th>
          <th>Zone</th>
        </tr>
      </thead>
      <tbody>
        <% @latest_trainings_for_table.each do |training| %>
          <tr class="text-center">
            <td><%= training.created_at.strftime("%d/%m/%y") %></td>
            <td><%= training.shot_total %></td>
            <td><%= training.shot_made %></td>
            <td><%= training.shooting_efficiency.to_i %>%</td>
            <td><%= training.zone.name %></td>
          </tr>
        <% end %>
      </tbody>
    </table>
    <div class="text-center mb-2">
    </div>

  </div>
  <% if @followers_trainings.present? %>
    <h2 class="text-center my-3 py-2 border-top border-bottom"><strong>Followers</strong></h2>
    <canvas id="followersChart" width="410" height="300" class="me-3"></canvas>
    <div class="position-relative shadow pb-5 mb-5" data-toggle-target="titre2">
      <p class="text-start ps-4 my-3 py-2 border-top border-bottom shadow"><strong>Détails</strong></p>
      <i class="fas fa-angle-down position-absolute end-0 top-0 pt-3 pe-3" data-toggle-target="toggleable2"></i>
    </div>
    <div class="d-flex flex-column d-none pb-5 mb-5" data-toggle-target="tablemoi2">
      <table class="table table-striped text-center">
        <thead>
          <tr class="text-center">
            <th>Date</th>
            <th><strong>Copain</strong></th>
            <th>Rentré</th>
            <th><strong>Précision</strong></th>
            <th>Zone</th>
          </tr>
        </thead>
        <tbody>
            <% @followers_trainings.each do |follower_training| %>
              <% if params[:zone_id].blank? || follower_training.zone.id == params[:zone_id].to_i %>
                <tr class="text-center">
                    <td><%= follower_training.created_at.strftime("%d/%m/%y") %></td>
                    <td><strong><%= link_to "#{follower_training.user.username}", profil_path(follower_training.user), class: "text-dark text-decoration-none" %></strong></td>
                    <td><%= "#{follower_training.shot_made}/#{follower_training.shot_total}" %></td>
                    <td><strong><%= follower_training.shooting_efficiency.to_i %>%</strong></td>
                    <td><%= follower_training.zone.name %></td>
                  </tr>
              <% end %>
            <% end %>
        </tbody>
      </table>
    </div>
  <% end %>
</div>
<div style="position: fixed; bottom: 0; width: 100%;">
  <%= render 'shared/footnav' %>
</div>

<script>
let statsChart;
let barChart;

function showAllZones() {
  window.location.href = "<%= stats_page_path %>";
}

function filterByZone() {
  const zoneId = document.getElementById("zoneFilter").value;

  if (zoneId === "") {
    window.location.href = "<%= stats_page_path %>";
  } else {
    const zoneIds = [zoneId];

    <% @followers_trainings.each do |follower_training| %>
      zoneIds.push("<%= follower_training.zone.id %>");
    <% end %>

    const combinedZoneIds = zoneIds.join(',');

    window.location.href = "<%= stats_page_path %>?zone_id=" + combinedZoneIds;
  }
}

function updateCharts() {
  const zoneId = document.getElementById("zoneFilter").value;

  fetch(`/stats.json?zone_id=${zoneId}`)
    .then(response => response.json())
    .then(data => {
      const newTrainingDates = data.latest_trainings_for_table.map(t => t.created_at);
      const newShootingEfficiencies = data.latest_trainings_for_table.map(t => t.shooting_efficiency);

      statsChart.data.labels = newTrainingDates;
      statsChart.data.datasets[0].data = newShootingEfficiencies;

      barChart.data.labels = newTrainingDates;
      barChart.data.datasets = data.followers_trainings_data.map((follower, index) => ({
        label: follower.label,
        data: follower.trainings.map(training => training.shooting_efficiency),
        backgroundColor: getRandomColor(),
        borderWidth: 2
      }));

      statsChart.update();
      barChart.update();
    });
}

document.addEventListener('DOMContentLoaded', function() {
  const trainingDates = <%= @latest_trainings_for_table.reverse.map { |t| t.created_at.strftime("") }.to_json.html_safe %>;
  const shootingEfficiencies = <%= @latest_trainings_for_table.reverse.map { |t| t.shooting_efficiency.to_i }.to_json.html_safe %>;
  const followersData = <%= @followers_trainings_data.to_json.html_safe %>;
  const ctx = document.getElementById('statsChart').getContext('2d');

  statsChart = new Chart(ctx, {
    type: 'line',
    data: {
      labels: trainingDates,
      datasets: [{
        label: '',
        data: shootingEfficiencies,
        borderColor: '#89A894',
        backgroundColor: getRandomColor(),
        borderWidth: 2,
        fill: false
      }]
    },
    options: {
      responsive: false,
      scales: {
        x: {
          type: 'category',
          labels: trainingDates,
        },
        y: {
          beginAtZero: true,
          max: 100,
          ticks: {
            callback: function(value) {
              return value + '%';
            }
          }
        }
      }
    }
  });

  const barCtx = document.getElementById('followersChart').getContext('2d');
  barChart = new Chart(barCtx, {
    type: 'line',
    data: {
      labels: trainingDates,
      datasets: followersData.map((follower, index) => ({
        label: follower.label,
        data: follower.trainings.map(training => training.shooting_efficiency),
        backgroundColor: getRandomColor(),
        fill: false,
        borderWidth: 2
      }))
    },
    options: {
      responsive: false,
      scales: {
        x: {
          type: 'category',
          labels: trainingDates,
        },
        y: {
          beginAtZero: true,
          max: 100,
          ticks: {
            callback: function(value) {
              return value + '%';
            }
          }
        }
      }
    }
  });

  console.log('Training Dates:', trainingDates);
  console.log('Followers Data:', followersData);

  function getRandomColor() {
    const letters = '0123456789ABCDEF';
    let color = '#';
    for (let i = 0; i < 6; i++) {
      color += letters[Math.floor(Math.random() * 16)];
    }
    return color;
  }

  document.getElementById("zoneFilter").addEventListener("change", updateCharts);
  updateCharts();
});

</script>
